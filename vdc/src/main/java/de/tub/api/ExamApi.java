/**
 * NOTE: This class is auto generated by the swagger code generator program (2.2.3).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package de.tub.api;

import de.tub.model.Exam;

import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2017-11-23T10:26:59.971Z")

@Api(value = "exam", description = "the exam API")
public interface ExamApi {

    @ApiOperation(value = "", notes = "returns the last exams for a specific patient", response = Exam.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Exam.class),
        @ApiResponse(code = 400, message = "Invalid ID supplied", response = Void.class),
        @ApiResponse(code = 404, message = "not exams found", response = Void.class) })
    
    @RequestMapping(value = "/exam/{SSN}",
        method = RequestMethod.GET)
    ResponseEntity<Exam> examSSNGet(@ApiParam(value = "unique ID of a patient",required=true ) @PathVariable("SSN") Long SSN);


    @ApiOperation(value = "", notes = "returns the last exams for a specific patient and test ", response = Exam.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Exam.class),
        @ApiResponse(code = 400, message = "Invalid ID supplied", response = Void.class),
        @ApiResponse(code = 404, message = "Patient not found", response = Void.class) })
    
    @RequestMapping(value = "/exam/{SSN}/{test}",
        method = RequestMethod.GET)
    ResponseEntity<Exam> examSSNTestGet(@ApiParam(value = "unique ID of a patient",required=true ) @PathVariable("SSN") Long SSN,@ApiParam(value = "name of the test to return",required=true, allowableValues="{values=[cholesterol, triglyceride, hepatitis], enumVars=[{name=CHOLESTEROL, value=\"cholesterol\"}, {name=TRIGLYCERIDE, value=\"triglyceride\"}, {name=HEPATITIS, value=\"hepatitis\"}]}" ) @PathVariable("test") String test);

}
