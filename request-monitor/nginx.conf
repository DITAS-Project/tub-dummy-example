 

user  root;
worker_processes  auto;
load_module modules/ngx_http_opentracing_module.so;
load_module modules/ngx_http_zipkin_module.so;

error_log  /var/log/nginx/customlog/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    zipkin_collector_host zipkin;
    zipkin_collector_port 9411;
    zipkin_service_name nginx;

    #set_by_lua $opentracing 'return os.getenv("OPENTRACING")';

    opentracing ${OPENTRACING};

    #json log format for the acess.log
    log_format  main escape=json '{ "time_local": "$time_local", "remote_addr":"$remote_addr",'
                      ' "request": "$request" , "request_time": "$request_time", "upstream_response_time": "$upstream_response_time", "request_id": "$request_id", '
                      '"status": "$status", "body_bytes_sent": "$body_bytes_sent"}';

    

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    include /etc/nginx/conf.d/*.conf;
    
    #set upstram to the vdc via docker-compose bindings
    upstream vdc {
	    server vdc:8080;
    }

    # simple reverse-proxy
    server { 
            #set access.log location to customlog
        access_log /var/log/nginx/customlog/access.log main ;


        listen     8000;
        server_name 127.0.0.1;
        
        # pass requests 
        location / {
            proxy_redirect off;
            proxy_set_header X-Request-Id $request_id;
            proxy_pass      http://vdc	;
        }
    }

}
